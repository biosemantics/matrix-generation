//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.18 at 10:21:36 AM MST 
//


package org.tdwg.rs.ubif._2006;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * # Derived from AbstractCharacterDefinition to be used in instance documents (non-abstract type)
 * 
 * <p>Java class for MolecularSequenceCharacter complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MolecularSequenceCharacter">
 *   &lt;complexContent>
 *     &lt;extension base="{http://rs.tdwg.org/UBIF/2006/}AbstractCharacterDefinition">
 *       &lt;sequence>
 *         &lt;element name="Assumptions" type="{http://rs.tdwg.org/UBIF/2006/}VersionExtension" minOccurs="0"/>
 *         &lt;element name="SequenceType" type="{http://rs.tdwg.org/UBIF/2006/}MolecularSequenceTypeEnum"/>
 *         &lt;element name="SymbolLength" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="GapSymbol" type="{http://rs.tdwg.org/UBIF/2006/}ShortString" minOccurs="0"/>
 *         &lt;element name="EnableAmbiguitySymbols" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;group ref="{http://rs.tdwg.org/UBIF/2006/}SpecificExtension" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MolecularSequenceCharacter", propOrder = {
    "assumptions",
    "sequenceType",
    "symbolLength",
    "gapSymbol",
    "enableAmbiguitySymbols",
    "nextVersion"
})
public class MolecularSequenceCharacter
    extends AbstractCharacterDefinition
{

    @XmlElement(name = "Assumptions")
    protected VersionExtension assumptions;
    @XmlElement(name = "SequenceType", required = true)
    protected QName sequenceType;
    @XmlElement(name = "SymbolLength", defaultValue = "1")
    protected BigInteger symbolLength;
    @XmlElement(name = "GapSymbol", defaultValue = "-")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String gapSymbol;
    @XmlElement(name = "EnableAmbiguitySymbols", defaultValue = "true")
    protected Boolean enableAmbiguitySymbols;
    @XmlElement(name = "NextVersion")
    protected VersionExtension nextVersion;

    /**
     * Gets the value of the assumptions property.
     * 
     * @return
     *     possible object is
     *     {@link VersionExtension }
     *     
     */
    public VersionExtension getAssumptions() {
        return assumptions;
    }

    /**
     * Sets the value of the assumptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VersionExtension }
     *     
     */
    public void setAssumptions(VersionExtension value) {
        this.assumptions = value;
    }

    /**
     * Gets the value of the sequenceType property.
     * 
     * @return
     *     possible object is
     *     {@link QName }
     *     
     */
    public QName getSequenceType() {
        return sequenceType;
    }

    /**
     * Sets the value of the sequenceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link QName }
     *     
     */
    public void setSequenceType(QName value) {
        this.sequenceType = value;
    }

    /**
     * Gets the value of the symbolLength property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSymbolLength() {
        return symbolLength;
    }

    /**
     * Sets the value of the symbolLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSymbolLength(BigInteger value) {
        this.symbolLength = value;
    }

    /**
     * Gets the value of the gapSymbol property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGapSymbol() {
        return gapSymbol;
    }

    /**
     * Sets the value of the gapSymbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGapSymbol(String value) {
        this.gapSymbol = value;
    }

    /**
     * Gets the value of the enableAmbiguitySymbols property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isEnableAmbiguitySymbols() {
        return enableAmbiguitySymbols;
    }

    /**
     * Sets the value of the enableAmbiguitySymbols property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableAmbiguitySymbols(Boolean value) {
        this.enableAmbiguitySymbols = value;
    }

    /**
     * Gets the value of the nextVersion property.
     * 
     * @return
     *     possible object is
     *     {@link VersionExtension }
     *     
     */
    public VersionExtension getNextVersion() {
        return nextVersion;
    }

    /**
     * Sets the value of the nextVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link VersionExtension }
     *     
     */
    public void setNextVersion(VersionExtension value) {
        this.nextVersion = value;
    }

}
